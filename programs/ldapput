local shell = require('shell')
local serialization = require('serialization')

local libldap = require('libldap')
local liblldns = require('liblldns')

local args, options = shell.parse(...)

if #args ~= 2 then
	print('usage: ldapput [--host=HOST] [--version=VERSION] <path> <value>')
	return
end

local host = options.host
if not host then
	local config = libldap.get_config()
	host = config.host
end

if not host then
	print('error: no host specified and no default host configured; pass --host=HOST to set a host')
	return
end

local version = options.version

local addr = liblldns.resolve(host)
if not addr then
	print('error: host not found: ' .. host)
	return
end

local db = libldap.LDAP(addr)
if version == nil then
	local res, ver = db:get('')
	if not res then
		print('Error while getting path to get version: ' .. ver)
		return
	end
	version = ver
else
	version = tonumber(version)
end

local result, err = db:put(args[1], version, serialization.unserialize(args[2]))

if result then
	print('Success.')
else
	print('Error: ' .. err)
end
