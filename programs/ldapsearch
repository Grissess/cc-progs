local shell = require('shell')

local libldap = require('libldap')
local liblldns = require('liblldns')

local args, options = shell.parse(...)

if #args ~= 1 then
	print('usage: ldapsearch [--host=HOST] [--base=BASE] <filter>')
	return
end

local host = options.host
if not host then
	local config = libldap.get_config()
	host = config.host
end

if not host then
	print('error: no host specified and no default host configured; pass --host=HOST to set a host')
	return
end

local base = options.base or ''

local addr = liblldns.resolve(host)
if not addr then
	print('error: host not found: ' .. host)
	return
end

local db = libldap.LDAP(addr)
local results, version = db:search(base, args[1])

for idx, result in ipairs(results) do
	print(idx, libldap.Path.to_string(result.path), serialization.serialize(result.value))
end
if #results <= 0 then
	print('No results.')
end

print('(Data version: ' .. tostring(version) .. ')')
